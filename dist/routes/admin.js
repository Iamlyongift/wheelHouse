"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = require("../controllers/adminController");
const Auth_1 = require("../middleware/Auth");
const payment_1 = require("../controllers/payment");
const router = express_1.default.Router();
router.post("/adminReg", adminController_1.adminRegister);
router.post("/adminLogin", adminController_1.adminLogin);
router.use(Auth_1.auth, Auth_1.requireAdmin);
router.use(Auth_1.auth, Auth_1.requireAdmin);
router.put("/verify-payment/:orderId", payment_1.verifyPayment);
const adminMetricsController_1 = require("../controllers/adminMetricsController");
router.get("/total-sales", adminMetricsController_1.getTotalSales);
router.get("/active-orders", adminMetricsController_1.getActiveOrdersCount);
router.get("/low-stock-alerts", adminMetricsController_1.getLowStockAlerts);
router.get("/recent-activities", adminMetricsController_1.getRecentActivities);
router.get("/get-inventory-report", adminMetricsController_1.getInventoryReport);
const adminController_2 = require("../controllers/adminController");
router.get("/users", adminController_2.getAllUsers);
router.put("/users/:userId", adminController_2.updateUser);
router.patch("/users/:userId/status", adminController_2.toggleUserStatus);
router.patch("/users/:userId/reset-password", adminController_2.resetUserPassword);
router.post("/creatAdmin", adminController_2.createAdminUser);
router.patch("/users/:userId/assign-role", adminController_2.assignAdminRole);
const adminReportsController_1 = require("../controllers/adminReportsController");
router.get("/reports", adminReportsController_1.generateSalesReport);
router.get("/analytics/users", adminReportsController_1.getUserAnalytics);
const adminCategoryController_1 = require("../controllers/adminCategoryController");
router.post("/categories", adminCategoryController_1.createCategory);
router.put("/categories/:categoryId", adminCategoryController_1.updateCategory);
router.delete("/categories/:categoryId", adminCategoryController_1.deleteCategory);
router.get("/inventory-report", adminMetricsController_1.getInventoryReport);
exports.default = router;
